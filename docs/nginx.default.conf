#user http;
worker_processes  1;

error_log   /var/log/nginx/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

pid        /run/nginx/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log main;

    sendfile        on;
    tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    gzip  on;
    gzip_comp_level 9;
    gzip_proxied any; # is this a security issue (side channel?)
    gzip_types *;
    gzip_static  on; # TODO we need to manually compress (then we could switch to always)

 
   # https://nginx.org/en/docs/http/ngx_http_api_module.html

# https://nginx.org/en/docs/http/ngx_http_proxy_module.html    

    server {
        server_name  aes.selfmade4u.de;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location = /favicon.ico {
             expires max;
             root   /opt/projektwahl-lit/dist/;
             try_files /favicon.ico =404;
        }

        location / {
             root   /opt/projektwahl-lit/dist/;
             try_files /index.html =404;
        }

        location /dist {
             expires max;
             root   /opt/projektwahl-lit/;
             try_files $uri =404;
        }

        location /api {
             proxy_pass https://localhost:8443;
        }

        error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/aes.selfmade4u.de/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/aes.selfmade4u.de/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}



    server {
    if ($host = aes.selfmade4u.de) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


        listen       80;
        server_name  aes.selfmade4u.de;
    return 404; # managed by Certbot


}}